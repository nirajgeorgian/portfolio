"use strict";

function setHeader(res, name, value, protect, override, writable) {
    if (override === !0) {
        var isPresent = res._headers && void 0 !== res._headers[name];
        if (isPresent === !0) return !0;
    }
    if (writable === !0) {
        var isWritable = res._headerSent === !1 || res.finished === !1;
        if (isWritable === !1) return !1;
    }
    if (res.setHeader(name, value), protect === !0) {
        var low = name.toLowerCase(), previous = Object.getOwnPropertyDescriptor(res._headers, low);
        if (void 0 !== previous && previous.configurable === !1) return !1;
        Object.defineProperty(res._headers, low, {
            configurable: !1,
            enumerable: !0,
            get: function() {
                return value;
            },
            set: function() {}
        });
    }
    return !0;
}

function setProctedHeader(res, name, value) {
    res.setHeader(name, value);
    var low = name.toLowerCase(), previous = Object.getOwnPropertyDescriptor(res._headers, low);
    return (!previous || previous.configurable === !0) && (Object.defineProperty(res._headers, low, {
        configurable: !1,
        enumerable: !0,
        get: function() {
            return value;
        },
        set: function() {}
    }), !0);
}

function setOverrideHeader(res, name, value) {
    return res._headers && void 0 !== res._headers[name] || res.setHeader(name, value), 
    !0;
}

function setWritableHeader(res, name, value) {
    return (res._headerSent === !1 || res.finished === !1) && (res.setHeader(name, value), 
    !0);
}

module.exports = setHeader, module.exports.setProctedHeader = setProctedHeader, 
module.exports.setOverrideHeader = setOverrideHeader, module.exports.setWritableHeader = setWritableHeader;
